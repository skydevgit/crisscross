VERSION 0.6.5
    * CrissCross::Data::Compare now can compare C-style strings.
    * x64 target added for Visual Studio 2005 projects.
    * New crisscross/crisscross.h added which basically includes every common CrissCross header.
    * RedBlackTree now works with char* string keys.
    * No longer needlessly recompiles on Mac OS X (build_number.h regeneration caused a recompile).
    * QuickSort::Sort is now marked deprecated with _CC_DEPRECATE_SLOW as a warning to those who use it.
    * CoreIOWriter had a few functions which had std::string passed by value rather than by reference.
    * DStack::peek() function added.
    * FastestSort and MemoryEfficientSort aliases added by request.
    * BTree alias for RedBlackTree added.

VERSION 0.6.0
    * CrissCross test suite added (tests a majority of the features).
    * Added QuickSort and CombSort.
    * Doxygen config updated to v1.5.2
    * Enabled man page generation on Doxygen config.
    * Documentation updated and clarified.
    * Fastdep and CCDV removed.
    * New build number system added (based on SVN revision number).
    * Visual C++ 2003 project added.
    * XCode project added.
    * Visual C++ 6.0 project removed.
    * Headers in all files reduced in size.
    * New CoreIOReader ReadLine added.
    * Flush added in CoreIOWriter::Write (some platforms wouldn't display written data until a newline).
    * Winsock 2.2 is now used in Windows builds (instead of 2.0)
    * CoreSocket::Close no longer attempts to close an invalid socket (which would cause errno to give an error value).
    * Various UDPSocket functions no longer return false errors.
    * SDL_APPLICATION preprocessor definition available for SDL applications with the SDLmain entry point.
    * Windows memory leak checking improved and no longer causes weird crashes.
    * Switched to STL for memory leak check file parsing.
    * Stale ENABLE_DEBUGLOG #ifdefs removed.
    * Option to disable C++ exception handler (decreases executable size among other things) available now.
    * CrissCross::Data::Compare is now a template function.
    * CoreMutex is now called Mutex.
    * CoreConsole is now called Console.
    * DArray, LList and RedBlackTree function calls are converted to a more standard naming system.
    * A dangerous flaw in the Stopwatch class causing a crash and a bad compile was corrected.
    * Platform detection improved and cleaned up.
    * Made several changes for GCC 4.3.0 (SVN) compatibility.
    * Gentoo ebuild is available on uplinklabs.net portage overlay.

VERSION 0.5.2
    * Split CoreIO into CoreIOReader and CoreIOWriter.
    * CoreConsole now accepts input.
    * All unicode support removed until it is further researched.
    * Several documentation errors were corrected.
    * CoreIOReader and CoreIOWriter now check to see if the file is open before attempting read or write operations.
    * Makefiles improved to allow 'make -j#' builds.
    * Added Visual C++ 6 project files, but there's no guarantee they work perfectly.
    * Moved data structures to the main include directory.
    * Including CrissCross files with #include <crisscross/foo> now works properly without adding -I/usr/include/crisscross to the GCC command line.
    * Fixed CCDV to say 'Compiling' rather than 'Linking' for precompiled headers.
    * CPUID now detects SSSE3 (Supplemental SSE3 instructions).
    * CPUID now properly detects CMP (Core Multi Processing, a.k.a. dual core)
    * Sockets heavily edited, allowing for better error handling.
    * TCPSocket::Accept() syntax changed.

VERSION 0.5.1
    * Fixed Makefiles to work on any previously non-working platforms (OS X, mainly).
    * Disabled CPUID on BSD. BSD lacks affinity control, and therefore doesn't work.

VERSION 0.5.0 ( MILESTONE 2, Codename "Loki" )
    * Cleanup
        Much of the existing code was disorganized, and was re-categorized into other namespaces.
    * Documentation
          o All namespaces
          o Stopwatch class
          o LList class
          o RedBlackTree class
              Some classes that showed up in documentation are now hidden.
          o CrissCross::System::param
          o CrissCross::Data::LListItem< T >
          o CrissCross::Data::RedBlackTree< dataType, keyType >::nodeType
    * Conventionalization
        Existing code is now consistent in it's conventions.
    * Bugfixes
        Bugs discovered during the v0.4.x testing cycle have been corrected (details unnecessary for pre-release code).
    * Examples
        v0.5.0 is the first public release. Examples are now provided for reference.
    * Cross-Platform Fixes
        Functions in CoreConsole that previously did nothing on non-Windows platforms now do what they should.
    * UTF-8 Support ( partially implemented and is untested)
        WCHAR and so on need to be supported. We're working on this right now, so please don't #define ENABLE_UNICODE unless you're brave.
